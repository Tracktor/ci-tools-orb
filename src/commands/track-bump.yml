description: >
  Bump version and tags of the project

parameters:
  branch:
    type: string
    default: ""
    description: "Branch to use to bump the version"
  default-branch:
    type: string
    default: "main"
    description: "Default branch"
  ci_email:
    type: env_var_name
    description: "Email to use for the git commit"
    default: CI_EMAIL
  ci_user:
    type: env_var_name
    description: "User to use for the git commit"
    default: CI_USER
  sign:
    type: boolean
    description: "Sign the commit"
    default: false
  params:
    type: string
    default: ''
    description: "Arguments to pass to the bump"
  dry-run:
    type: boolean
    description: "Do not commit or push the changes"
    default: false
  verbose:
    type: boolean
    description: "Print the commands executed"
    default: false
  track-bump-version:
    type: string
    description: "Version of the track-bump library"
    default: "latest"
  create-release:
    type: boolean
    description: "Create a release on github"
    default: true
  tag-pattern:
    type: string
    description: "Pattern to pass to git-cliff"
    default: ""
  after-steps:
    type: steps
    default: []
    description: "Steps to run before pushing the changes"
  skip-changelog:
    type: boolean
    description: "Skip generating the changelog"
    default: false
steps:
  - run:
      name: Bump version
      environment:
        DEFAULT_BRANCH: << parameters.default-branch >>
        BRANCH: << parameters.branch >>
        SIGN_COMMIT: << parameters.sign >>
        CUSTOM_PARAMS: << parameters.params >>
        DRY_RUN: << parameters.dry-run >>
        VERBOSE: << parameters.verbose >>
        TRACK_BUMP_VERSION: << parameters.track-bump-version >>
      command: << include(scripts/bash/track-bump.sh) >>
  - when:
      condition:
        not: << parameters.dry-run >>
      steps:
        - run:
            name: Generate changelog
            environment:
              TAG_PATTERN: << parameters.tag-pattern >>
            command: << include(scripts/bash/gen-changelog.sh) >>
  - steps: << parameters.after-steps >>
  - run:
      name: Push changes
      environment:
        BRANCH: << parameters.branch >>
        CREATE_RELEASE: << parameters.create-release >>
      command: << include(scripts/bash/push-release.sh) >>
