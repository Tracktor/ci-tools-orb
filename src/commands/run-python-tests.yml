description: >
  Using a pyproject.toml file and poetry, runs pyright then pytest with coverage

parameters:
  extras:
    description: "Poetry install extra parameters"
    default: ""
    type: string
  before-steps:
    description: "Steps that will be executed before dependencies are installed"
    type: steps
    default: []
  cache-version:
    description: "Cache version (needed in case of cache issue)"
    type: string
    default: "v0"


steps:
  - restore_cache:
      keys:
        - deps-<< parameters.cache-version >>-{{ checksum "poetry.lock" }}
  - run:
      name: Install orb dependencies
      command: poetry install << parameters.extras >>
  - save_cache:
      key: deps-<< parameters.cache-version >>-{{ checksum "poetry.lock" }}
      paths:
        - /home/circleci/.cache/pypoetry/virtualenvs
  - steps: << parameters.before-steps >>
  - run:
      name: Checking format
      command: poetry run black --check .
  - run:
      name: Running lint
      command: poetry run ruff .
  - run:
      name: Checking types
      command: poetry run pyright
  - run:
      name: Running tests
      command: << include(scripts/python/python-tests.sh) >>
  - store_test_results:
      path: tests
  - store_artifacts:
      path: htmlcov
